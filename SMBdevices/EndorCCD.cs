using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace SMBdevices
{
    public partial class AndorCCD
    {
        // !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  CAUTION  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        // !!      This file is automatically generated from atmcd32d.h file.      !!
        // !!      It could contain errors with some functions, then you should    !!
        // !!      manually marshall appropriate those variables.                  !!
        // !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

        /// AT_NoOfVersionInfoIds -> 2
        public const int AT_NoOfVersionInfoIds = 2;

        /// AT_VERSION_INFO_LEN -> 80
        public const int AT_VERSION_INFO_LEN = 80;

        /// AT_CONTROLLER_CARD_MODEL_LEN -> 80
        public const int AT_CONTROLLER_CARD_MODEL_LEN = 80;

        /// AT_DDGLite_ControlBit_GlobalEnable -> 0x01
        public const int AT_DDGLite_ControlBit_GlobalEnable = 1;

        /// AT_DDGLite_ControlBit_ChannelEnable -> 0x01
        public const int AT_DDGLite_ControlBit_ChannelEnable = 1;

        /// AT_DDGLite_ControlBit_FreeRun -> 0x02
        public const int AT_DDGLite_ControlBit_FreeRun = 2;

        /// AT_DDGLite_ControlBit_DisableOnFrame -> 0x04
        public const int AT_DDGLite_ControlBit_DisableOnFrame = 4;

        /// AT_DDGLite_ControlBit_RestartOnFire -> 0x08
        public const int AT_DDGLite_ControlBit_RestartOnFire = 8;

        /// AT_DDGLite_ControlBit_Invert -> 0x10
        public const int AT_DDGLite_ControlBit_Invert = 16;

        /// AT_DDGLite_ControlBit_EnableOnFire -> 0x20
        public const int AT_DDGLite_ControlBit_EnableOnFire = 32;

        /// DRV_ERROR_CODES -> 20001
        public const int DRV_ERROR_CODES = 20001;

        /// DRV_SUCCESS -> 20002
        public const int DRV_SUCCESS = 20002;

        /// DRV_VXDNOTINSTALLED -> 20003
        public const int DRV_VXDNOTINSTALLED = 20003;

        /// DRV_ERROR_SCAN -> 20004
        public const int DRV_ERROR_SCAN = 20004;

        /// DRV_ERROR_CHECK_SUM -> 20005
        public const int DRV_ERROR_CHECK_SUM = 20005;

        /// DRV_ERROR_FILELOAD -> 20006
        public const int DRV_ERROR_FILELOAD = 20006;

        /// DRV_UNKNOWN_FUNCTION -> 20007
        public const int DRV_UNKNOWN_FUNCTION = 20007;

        /// DRV_ERROR_VXD_INIT -> 20008
        public const int DRV_ERROR_VXD_INIT = 20008;

        /// DRV_ERROR_ADDRESS -> 20009
        public const int DRV_ERROR_ADDRESS = 20009;

        /// DRV_ERROR_PAGELOCK -> 20010
        public const int DRV_ERROR_PAGELOCK = 20010;

        /// DRV_ERROR_PAGEUNLOCK -> 20011
        public const int DRV_ERROR_PAGEUNLOCK = 20011;

        /// DRV_ERROR_BOARDTEST -> 20012
        public const int DRV_ERROR_BOARDTEST = 20012;

        /// DRV_ERROR_ACK -> 20013
        public const int DRV_ERROR_ACK = 20013;

        /// DRV_ERROR_UP_FIFO -> 20014
        public const int DRV_ERROR_UP_FIFO = 20014;

        /// DRV_ERROR_PATTERN -> 20015
        public const int DRV_ERROR_PATTERN = 20015;

        /// DRV_ACQUISITION_ERRORS -> 20017
        public const int DRV_ACQUISITION_ERRORS = 20017;

        /// DRV_ACQ_BUFFER -> 20018
        public const int DRV_ACQ_BUFFER = 20018;

        /// DRV_ACQ_DOWNFIFO_FULL -> 20019
        public const int DRV_ACQ_DOWNFIFO_FULL = 20019;

        /// DRV_PROC_UNKONWN_INSTRUCTION -> 20020
        public const int DRV_PROC_UNKONWN_INSTRUCTION = 20020;

        /// DRV_ILLEGAL_OP_CODE -> 20021
        public const int DRV_ILLEGAL_OP_CODE = 20021;

        /// DRV_KINETIC_TIME_NOT_MET -> 20022
        public const int DRV_KINETIC_TIME_NOT_MET = 20022;

        /// DRV_ACCUM_TIME_NOT_MET -> 20023
        public const int DRV_ACCUM_TIME_NOT_MET = 20023;

        /// DRV_NO_NEW_DATA -> 20024
        public const int DRV_NO_NEW_DATA = 20024;

        /// DRV_PCI_DMA_FAIL -> 20025
        public const int DRV_PCI_DMA_FAIL = 20025;

        /// DRV_SPOOLERROR -> 20026
        public const int DRV_SPOOLERROR = 20026;

        /// DRV_SPOOLSETUPERROR -> 20027
        public const int DRV_SPOOLSETUPERROR = 20027;

        /// DRV_FILESIZELIMITERROR -> 20028
        public const int DRV_FILESIZELIMITERROR = 20028;

        /// DRV_ERROR_FILESAVE -> 20029
        public const int DRV_ERROR_FILESAVE = 20029;

        /// DRV_TEMPERATURE_CODES -> 20033
        public const int DRV_TEMPERATURE_CODES = 20033;

        /// DRV_TEMPERATURE_OFF -> 20034
        public const int DRV_TEMPERATURE_OFF = 20034;

        /// DRV_TEMPERATURE_NOT_STABILIZED -> 20035
        public const int DRV_TEMPERATURE_NOT_STABILIZED = 20035;

        /// DRV_TEMPERATURE_STABILIZED -> 20036
        public const int DRV_TEMPERATURE_STABILIZED = 20036;

        /// DRV_TEMPERATURE_NOT_REACHED -> 20037
        public const int DRV_TEMPERATURE_NOT_REACHED = 20037;

        /// DRV_TEMPERATURE_OUT_RANGE -> 20038
        public const int DRV_TEMPERATURE_OUT_RANGE = 20038;

        /// DRV_TEMPERATURE_NOT_SUPPORTED -> 20039
        public const int DRV_TEMPERATURE_NOT_SUPPORTED = 20039;

        /// DRV_TEMPERATURE_DRIFT -> 20040
        public const int DRV_TEMPERATURE_DRIFT = 20040;

        /// DRV_TEMP_CODES -> 20033
        public const int DRV_TEMP_CODES = 20033;

        /// DRV_TEMP_OFF -> 20034
        public const int DRV_TEMP_OFF = 20034;

        /// DRV_TEMP_NOT_STABILIZED -> 20035
        public const int DRV_TEMP_NOT_STABILIZED = 20035;

        /// DRV_TEMP_STABILIZED -> 20036
        public const int DRV_TEMP_STABILIZED = 20036;

        /// DRV_TEMP_NOT_REACHED -> 20037
        public const int DRV_TEMP_NOT_REACHED = 20037;

        /// DRV_TEMP_OUT_RANGE -> 20038
        public const int DRV_TEMP_OUT_RANGE = 20038;

        /// DRV_TEMP_NOT_SUPPORTED -> 20039
        public const int DRV_TEMP_NOT_SUPPORTED = 20039;

        /// DRV_TEMP_DRIFT -> 20040
        public const int DRV_TEMP_DRIFT = 20040;

        /// DRV_GENERAL_ERRORS -> 20049
        public const int DRV_GENERAL_ERRORS = 20049;

        /// DRV_INVALID_AUX -> 20050
        public const int DRV_INVALID_AUX = 20050;

        /// DRV_COF_NOTLOADED -> 20051
        public const int DRV_COF_NOTLOADED = 20051;

        /// DRV_FPGAPROG -> 20052
        public const int DRV_FPGAPROG = 20052;

        /// DRV_FLEXERROR -> 20053
        public const int DRV_FLEXERROR = 20053;

        /// DRV_GPIBERROR -> 20054
        public const int DRV_GPIBERROR = 20054;

        /// DRV_EEPROMVERSIONERROR -> 20055
        public const int DRV_EEPROMVERSIONERROR = 20055;

        /// DRV_DATATYPE -> 20064
        public const int DRV_DATATYPE = 20064;

        /// DRV_DRIVER_ERRORS -> 20065
        public const int DRV_DRIVER_ERRORS = 20065;

        /// DRV_P1INVALID -> 20066
        public const int DRV_P1INVALID = 20066;

        /// DRV_P2INVALID -> 20067
        public const int DRV_P2INVALID = 20067;

        /// DRV_P3INVALID -> 20068
        public const int DRV_P3INVALID = 20068;

        /// DRV_P4INVALID -> 20069
        public const int DRV_P4INVALID = 20069;

        /// DRV_INIERROR -> 20070
        public const int DRV_INIERROR = 20070;

        /// DRV_COFERROR -> 20071
        public const int DRV_COFERROR = 20071;

        /// DRV_ACQUIRING -> 20072
        public const int DRV_ACQUIRING = 20072;

        /// DRV_IDLE -> 20073
        public const int DRV_IDLE = 20073;

        /// DRV_TEMPCYCLE -> 20074
        public const int DRV_TEMPCYCLE = 20074;

        /// DRV_NOT_INITIALIZED -> 20075
        public const int DRV_NOT_INITIALIZED = 20075;

        /// DRV_P5INVALID -> 20076
        public const int DRV_P5INVALID = 20076;

        /// DRV_P6INVALID -> 20077
        public const int DRV_P6INVALID = 20077;

        /// DRV_INVALID_MODE -> 20078
        public const int DRV_INVALID_MODE = 20078;

        /// DRV_INVALID_FILTER -> 20079
        public const int DRV_INVALID_FILTER = 20079;

        /// DRV_I2CERRORS -> 20080
        public const int DRV_I2CERRORS = 20080;

        /// DRV_I2CDEVNOTFOUND -> 20081
        public const int DRV_I2CDEVNOTFOUND = 20081;

        /// DRV_I2CTIMEOUT -> 20082
        public const int DRV_I2CTIMEOUT = 20082;

        /// DRV_P7INVALID -> 20083
        public const int DRV_P7INVALID = 20083;

        /// DRV_USBERROR -> 20089
        public const int DRV_USBERROR = 20089;

        /// DRV_IOCERROR -> 20090
        public const int DRV_IOCERROR = 20090;

        /// DRV_VRMVERSIONERROR -> 20091
        public const int DRV_VRMVERSIONERROR = 20091;

        /// DRV_USB_INTERRUPT_ENDPOINT_ERROR -> 20093
        public const int DRV_USB_INTERRUPT_ENDPOINT_ERROR = 20093;

        /// DRV_RANDOM_TRACK_ERROR -> 20094
        public const int DRV_RANDOM_TRACK_ERROR = 20094;

        /// DRV_INVALID_TRIGGER_MODE -> 20095
        public const int DRV_INVALID_TRIGGER_MODE = 20095;

        /// DRV_LOAD_FIRMWARE_ERROR -> 20096
        public const int DRV_LOAD_FIRMWARE_ERROR = 20096;

        /// DRV_DIVIDE_BY_ZERO_ERROR -> 20097
        public const int DRV_DIVIDE_BY_ZERO_ERROR = 20097;

        /// DRV_INVALID_RINGEXPOSURES -> 20098
        public const int DRV_INVALID_RINGEXPOSURES = 20098;

        /// DRV_BINNING_ERROR -> 20099
        public const int DRV_BINNING_ERROR = 20099;

        /// DRV_ERROR_NOCAMERA -> 20990
        public const int DRV_ERROR_NOCAMERA = 20990;

        /// DRV_NOT_SUPPORTED -> 20991
        public const int DRV_NOT_SUPPORTED = 20991;

        /// DRV_NOT_AVAILABLE -> 20992
        public const int DRV_NOT_AVAILABLE = 20992;

        /// DRV_ERROR_MAP -> 20115
        public const int DRV_ERROR_MAP = 20115;

        /// DRV_ERROR_UNMAP -> 20116
        public const int DRV_ERROR_UNMAP = 20116;

        /// DRV_ERROR_MDL -> 20117
        public const int DRV_ERROR_MDL = 20117;

        /// DRV_ERROR_UNMDL -> 20118
        public const int DRV_ERROR_UNMDL = 20118;

        /// DRV_ERROR_BUFFSIZE -> 20119
        public const int DRV_ERROR_BUFFSIZE = 20119;

        /// DRV_ERROR_NOHANDLE -> 20121
        public const int DRV_ERROR_NOHANDLE = 20121;

        /// DRV_GATING_NOT_AVAILABLE -> 20130
        public const int DRV_GATING_NOT_AVAILABLE = 20130;

        /// DRV_FPGA_VOLTAGE_ERROR -> 20131
        public const int DRV_FPGA_VOLTAGE_ERROR = 20131;

        /// DRV_MSTIMINGS_ERROR -> 20156
        public const int DRV_MSTIMINGS_ERROR = 20156;

        /// AC_ACQMODE_SINGLE -> 1
        public const int AC_ACQMODE_SINGLE = 1;

        /// AC_ACQMODE_VIDEO -> 2
        public const int AC_ACQMODE_VIDEO = 2;

        /// AC_ACQMODE_ACCUMULATE -> 4
        public const int AC_ACQMODE_ACCUMULATE = 4;

        /// AC_ACQMODE_KINETIC -> 8
        public const int AC_ACQMODE_KINETIC = 8;

        /// AC_ACQMODE_FRAMETRANSFER -> 16
        public const int AC_ACQMODE_FRAMETRANSFER = 16;

        /// AC_ACQMODE_FASTKINETICS -> 32
        public const int AC_ACQMODE_FASTKINETICS = 32;

        /// AC_READMODE_FULLIMAGE -> 1
        public const int AC_READMODE_FULLIMAGE = 1;

        /// AC_READMODE_SUBIMAGE -> 2
        public const int AC_READMODE_SUBIMAGE = 2;

        /// AC_READMODE_SINGLETRACK -> 4
        public const int AC_READMODE_SINGLETRACK = 4;

        /// AC_READMODE_FVB -> 8
        public const int AC_READMODE_FVB = 8;

        /// AC_READMODE_MULTITRACK -> 16
        public const int AC_READMODE_MULTITRACK = 16;

        /// AC_READMODE_RANDOMTRACK -> 32
        public const int AC_READMODE_RANDOMTRACK = 32;

        /// AC_TRIGGERMODE_INTERNAL -> 1
        public const int AC_TRIGGERMODE_INTERNAL = 1;

        /// AC_TRIGGERMODE_EXTERNAL -> 2
        public const int AC_TRIGGERMODE_EXTERNAL = 2;

        /// AC_TRIGGERMODE_EXTERNAL_FVB_EM -> 4
        public const int AC_TRIGGERMODE_EXTERNAL_FVB_EM = 4;

        /// AC_TRIGGERMODE_CONTINUOUS -> 8
        public const int AC_TRIGGERMODE_CONTINUOUS = 8;

        /// AC_TRIGGERMODE_EXTERNALSTART -> 16
        public const int AC_TRIGGERMODE_EXTERNALSTART = 16;

        /// AC_TRIGGERMODE_EXTERNALEXPOSURE -> 32
        public const int AC_TRIGGERMODE_EXTERNALEXPOSURE = 32;

        /// AC_TRIGGERMODE_BULB -> 32
        public const int AC_TRIGGERMODE_BULB = 32;

        /// AC_CAMERATYPE_PDA -> 0
        public const int AC_CAMERATYPE_PDA = 0;

        /// AC_CAMERATYPE_IXON -> 1
        public const int AC_CAMERATYPE_IXON = 1;

        /// AC_CAMERATYPE_ICCD -> 2
        public const int AC_CAMERATYPE_ICCD = 2;

        /// AC_CAMERATYPE_EMCCD -> 3
        public const int AC_CAMERATYPE_EMCCD = 3;

        /// AC_CAMERATYPE_CCD -> 4
        public const int AC_CAMERATYPE_CCD = 4;

        /// AC_CAMERATYPE_ISTAR -> 5
        public const int AC_CAMERATYPE_ISTAR = 5;

        /// AC_CAMERATYPE_VIDEO -> 6
        public const int AC_CAMERATYPE_VIDEO = 6;

        /// AC_CAMERATYPE_IDUS -> 7
        public const int AC_CAMERATYPE_IDUS = 7;

        /// AC_CAMERATYPE_NEWTON -> 8
        public const int AC_CAMERATYPE_NEWTON = 8;

        /// AC_CAMERATYPE_SURCAM -> 9
        public const int AC_CAMERATYPE_SURCAM = 9;

        /// AC_CAMERATYPE_USBISTAR -> 10
        public const int AC_CAMERATYPE_USBISTAR = 10;

        /// AC_CAMERATYPE_LUCA -> 11
        public const int AC_CAMERATYPE_LUCA = 11;

        /// AC_CAMERATYPE_RESERVED -> 12
        public const int AC_CAMERATYPE_RESERVED = 12;

        /// AC_CAMERATYPE_IKON -> 13
        public const int AC_CAMERATYPE_IKON = 13;

        /// AC_CAMERATYPE_INGAAS -> 14
        public const int AC_CAMERATYPE_INGAAS = 14;

        /// AC_CAMERATYPE_IVAC -> 15
        public const int AC_CAMERATYPE_IVAC = 15;

        /// AC_CAMERATYPE_UNPROGRAMMED -> 16
        public const int AC_CAMERATYPE_UNPROGRAMMED = 16;

        /// AC_CAMERATYPE_CLARA -> 17
        public const int AC_CAMERATYPE_CLARA = 17;

        /// AC_PIXELMODE_8BIT -> 1
        public const int AC_PIXELMODE_8BIT = 1;

        /// AC_PIXELMODE_14BIT -> 2
        public const int AC_PIXELMODE_14BIT = 2;

        /// AC_PIXELMODE_16BIT -> 4
        public const int AC_PIXELMODE_16BIT = 4;

        /// AC_PIXELMODE_32BIT -> 8
        public const int AC_PIXELMODE_32BIT = 8;

        /// AC_PIXELMODE_MONO -> 0
        public const int AC_PIXELMODE_MONO = 0;

        /// AC_PIXELMODE_RGB -> (1 << 16)
        public const int AC_PIXELMODE_RGB = (1) << (16);

        /// AC_PIXELMODE_CMY -> (2 << 16)
        public const int AC_PIXELMODE_CMY = (2) << (16);

        /// AC_SETFUNCTION_VREADOUT -> 1
        public const int AC_SETFUNCTION_VREADOUT = 1;

        /// AC_SETFUNCTION_HREADOUT -> 2
        public const int AC_SETFUNCTION_HREADOUT = 2;

        /// AC_SETFUNCTION_TEMPERATURE -> 4
        public const int AC_SETFUNCTION_TEMPERATURE = 4;

        /// AC_SETFUNCTION_MCPGAIN -> 8
        public const int AC_SETFUNCTION_MCPGAIN = 8;

        /// AC_SETFUNCTION_EMCCDGAIN -> 16
        public const int AC_SETFUNCTION_EMCCDGAIN = 16;

        /// AC_SETFUNCTION_BASELINECLAMP -> 32
        public const int AC_SETFUNCTION_BASELINECLAMP = 32;

        /// AC_SETFUNCTION_VSAMPLITUDE -> 64
        public const int AC_SETFUNCTION_VSAMPLITUDE = 64;

        /// AC_SETFUNCTION_HIGHCAPACITY -> 128
        public const int AC_SETFUNCTION_HIGHCAPACITY = 128;

        /// AC_SETFUNCTION_BASELINEOFFSET -> 256
        public const int AC_SETFUNCTION_BASELINEOFFSET = 256;

        /// AC_SETFUNCTION_PREAMPGAIN -> 512
        public const int AC_SETFUNCTION_PREAMPGAIN = 512;

        /// AC_SETFUNCTION_CROPMODE -> 1024
        public const int AC_SETFUNCTION_CROPMODE = 1024;

        /// AC_SETFUNCTION_DMAPARAMETERS -> 2048
        public const int AC_SETFUNCTION_DMAPARAMETERS = 2048;

        /// AC_SETFUNCTION_HORIZONTALBIN -> 4096
        public const int AC_SETFUNCTION_HORIZONTALBIN = 4096;

        /// AC_SETFUNCTION_MULTITRACKHRANGE -> 8192
        public const int AC_SETFUNCTION_MULTITRACKHRANGE = 8192;

        /// AC_SETFUNCTION_RANDOMTRACKNOGAPS -> 16384
        public const int AC_SETFUNCTION_RANDOMTRACKNOGAPS = 16384;

        /// AC_SETFUNCTION_EMADVANCED -> 32768
        public const int AC_SETFUNCTION_EMADVANCED = 32768;

        /// AC_SETFUNCTION_GAIN -> 8
        public const int AC_SETFUNCTION_GAIN = 8;

        /// AC_SETFUNCTION_ICCDGAIN -> 8
        public const int AC_SETFUNCTION_ICCDGAIN = 8;

        /// AC_GETFUNCTION_TEMPERATURE -> 0x01
        public const int AC_GETFUNCTION_TEMPERATURE = 1;

        /// AC_GETFUNCTION_TARGETTEMPERATURE -> 0x02
        public const int AC_GETFUNCTION_TARGETTEMPERATURE = 2;

        /// AC_GETFUNCTION_TEMPERATURERANGE -> 0x04
        public const int AC_GETFUNCTION_TEMPERATURERANGE = 4;

        /// AC_GETFUNCTION_DETECTORSIZE -> 0x08
        public const int AC_GETFUNCTION_DETECTORSIZE = 8;

        /// AC_GETFUNCTION_MCPGAIN -> 0x10
        public const int AC_GETFUNCTION_MCPGAIN = 16;

        /// AC_GETFUNCTION_EMCCDGAIN -> 0x20
        public const int AC_GETFUNCTION_EMCCDGAIN = 32;

        /// AC_GETFUNCTION_HVFLAG -> 0x40
        public const int AC_GETFUNCTION_HVFLAG = 64;

        /// AC_GETFUNCTION_GAIN -> 0x10
        public const int AC_GETFUNCTION_GAIN = 16;

        /// AC_GETFUNCTION_ICCDGAIN -> 0x10
        public const int AC_GETFUNCTION_ICCDGAIN = 16;

        /// AC_FEATURES_POLLING -> 1
        public const int AC_FEATURES_POLLING = 1;

        /// AC_FEATURES_EVENTS -> 2
        public const int AC_FEATURES_EVENTS = 2;

        /// AC_FEATURES_SPOOLING -> 4
        public const int AC_FEATURES_SPOOLING = 4;

        /// AC_FEATURES_SHUTTER -> 8
        public const int AC_FEATURES_SHUTTER = 8;

        /// AC_FEATURES_SHUTTEREX -> 16
        public const int AC_FEATURES_SHUTTEREX = 16;

        /// AC_FEATURES_EXTERNAL_I2C -> 32
        public const int AC_FEATURES_EXTERNAL_I2C = 32;

        /// AC_FEATURES_SATURATIONEVENT -> 64
        public const int AC_FEATURES_SATURATIONEVENT = 64;

        /// AC_FEATURES_FANCONTROL -> 128
        public const int AC_FEATURES_FANCONTROL = 128;

        /// AC_FEATURES_MIDFANCONTROL -> 256
        public const int AC_FEATURES_MIDFANCONTROL = 256;

        /// AC_FEATURES_TEMPERATUREDURINGACQUISITION -> 512
        public const int AC_FEATURES_TEMPERATUREDURINGACQUISITION = 512;

        /// AC_FEATURES_KEEPCLEANCONTROL -> 1024
        public const int AC_FEATURES_KEEPCLEANCONTROL = 1024;

        /// AC_FEATURES_DDGLITE -> 0x0800
        public const int AC_FEATURES_DDGLITE = 2048;

        /// AC_FEATURES_FTEXTERNALEXPOSURE -> 0x1000
        public const int AC_FEATURES_FTEXTERNALEXPOSURE = 4096;

        /// AC_FEATURES_KINETICEXTERNALEXPOSURE -> 0x2000
        public const int AC_FEATURES_KINETICEXTERNALEXPOSURE = 8192;

        /// AC_FEATURES_DACCONTROL -> 0x4000
        public const int AC_FEATURES_DACCONTROL = 16384;

        /// AC_FEATURES_METADATA -> 0x8000
        public const int AC_FEATURES_METADATA = 32768;

        /// AC_EMGAIN_8BIT -> 1
        public const int AC_EMGAIN_8BIT = 1;

        /// AC_EMGAIN_12BIT -> 2
        public const int AC_EMGAIN_12BIT = 2;

        /// AC_EMGAIN_LINEAR12 -> 4
        public const int AC_EMGAIN_LINEAR12 = 4;

        /// AC_EMGAIN_REAL12 -> 8
        public const int AC_EMGAIN_REAL12 = 8;
    }

    public enum AT_VersionInfoId
    {

        /// AT_SDKVersion -> 0x40000000
        AT_SDKVersion = 1073741824,

        /// AT_DeviceDriverVersion -> 0x40000001
        AT_DeviceDriverVersion = 1073741825,
    }

    public enum AT_DDGLiteChannelId
    {

        /// AT_DDGLite_ChannelA -> 0x40000000
        AT_DDGLite_ChannelA = 1073741824,

        /// AT_DDGLite_ChannelB -> 0x40000001
        AT_DDGLite_ChannelB = 1073741825,

        /// AT_DDGLite_ChannelC -> 0x40000002
        AT_DDGLite_ChannelC = 1073741826,
    }

    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]
    public struct ANDORCAPS
    {

        /// ULONG->unsigned int
        public uint ulSize;

        /// ULONG->unsigned int
        public uint ulAcqModes;

        /// ULONG->unsigned int
        public uint ulReadModes;

        /// ULONG->unsigned int
        public uint ulTriggerModes;

        /// ULONG->unsigned int
        public uint ulCameraType;

        /// ULONG->unsigned int
        public uint ulPixelMode;

        /// ULONG->unsigned int
        public uint ulSetFunctions;

        /// ULONG->unsigned int
        public uint ulGetFunctions;

        /// ULONG->unsigned int
        public uint ulFeatures;

        /// ULONG->unsigned int
        public uint ulPCICard;

        /// ULONG->unsigned int
        public uint ulEMGainCapability;

        /// ULONG->unsigned int
        public uint ulFTReadModes;
    }

    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]
    public struct COLORDEMOSAICINFO
    {

        /// int
        public int iX;

        /// int
        public int iY;

        /// int
        public int iAlgorithm;

        /// int
        public int iXPhase;

        /// int
        public int iYPhase;

        /// int
        public int iBackground;
    }

    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]
    public struct WHITEBALANCEINFO
    {

        /// int
        public int iSize;

        /// int
        public int iX;

        /// int
        public int iY;

        /// int
        public int iAlgorithm;

        /// int
        public int iROI_left;

        /// int
        public int iROI_right;

        /// int
        public int iROI_top;

        /// int
        public int iROI_bottom;

        /// int
        public int iOperation;
    }

    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]
    public struct SYSTEMTIME
    {

        /// WORD->unsigned short
        public ushort wYear;

        /// WORD->unsigned short
        public ushort wMonth;

        /// WORD->unsigned short
        public ushort wDayOfWeek;

        /// WORD->unsigned short
        public ushort wDay;

        /// WORD->unsigned short
        public ushort wHour;

        /// WORD->unsigned short
        public ushort wMinute;

        /// WORD->unsigned short
        public ushort wSecond;

        /// WORD->unsigned short
        public ushort wMilliseconds;
    }

    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]
    public struct HWND__
    {

        /// int
        public int unused;
    }

    public partial class AndorCCD
    {

        /// Return Type: unsigned int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "AbortAcquisition")]
        public static extern uint AbortAcquisition();


        /// Return Type: unsigned int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "CancelWait")]
        public static extern uint CancelWait();


        /// Return Type: unsigned int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "CoolerOFF")]
        public static extern uint CoolerOFF();


        /// Return Type: unsigned int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "CoolerON")]
        public static extern uint CoolerON();


        /// Return Type: unsigned int
        ///_input: WORD*
        ///_red: WORD*
        ///_green: WORD*
        ///_blue: WORD*
        ///_info: ColorDemosaicInfo*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "DemosaicImage")]
        public static extern uint DemosaicImage(ref ushort _input, ref ushort _red, ref ushort _green, ref ushort _blue, ref COLORDEMOSAICINFO _info);


        /// Return Type: unsigned int
        ///iMode: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "EnableKeepCleans")]
        public static extern uint EnableKeepCleans(int iMode);


        /// Return Type: unsigned int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "FreeInternalMemory")]
        public static extern uint FreeInternalMemory();


        /// Return Type: unsigned int
        ///array: int*
        ///size: unsigned int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetAcquiredData")]
        public static extern uint GetAcquiredData(ref int array, uint size);


        /// Return Type: unsigned int
        ///array: WORD*
        ///size: unsigned int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetAcquiredData16")]
        public static extern uint GetAcquiredData16(ref ushort array, uint size);


        /// Return Type: unsigned int
        ///array: float*
        ///size: unsigned int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetAcquiredFloatData")]
        public static extern uint GetAcquiredFloatData(ref float array, uint size);


        /// Return Type: unsigned int
        ///acc: int*
        ///series: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetAcquisitionProgress")]
        public static extern uint GetAcquisitionProgress(ref int acc, ref int series);


        /// Return Type: unsigned int
        ///exposure: float*
        ///accumulate: float*
        ///kinetic: float*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetAcquisitionTimings")]
        public static extern uint GetAcquisitionTimings(ref float exposure, ref float accumulate, ref float kinetic);


        /// Return Type: unsigned int
        ///_inumTimes: int
        ///_fptimes: float*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetAdjustedRingExposureTimes")]
        public static extern uint GetAdjustedRingExposureTimes(int _inumTimes, ref float _fptimes);


        /// Return Type: unsigned int
        ///array: int*
        ///size: unsigned int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetAllDMAData")]
        public static extern uint GetAllDMAData(ref int array, uint size);


        /// Return Type: unsigned int
        ///index: int
        ///name: char*
        ///len: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetAmpDesc")]
        public static extern uint GetAmpDesc(int index, string name, int len);


        /// Return Type: unsigned int
        ///index: int
        ///speed: float*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetAmpMaxSpeed")]
        public static extern uint GetAmpMaxSpeed(int index, ref float speed);


        /// Return Type: unsigned int
        ///totalCameras: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetAvailableCameras")]
        public static extern uint GetAvailableCameras(ref int totalCameras);


        /// Return Type: unsigned int
        ///array: int*
        ///size: unsigned int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetBackground")]
        public static extern uint GetBackground(ref int array, uint size);


        /// Return Type: unsigned int
        ///channel: int
        ///depth: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetBitDepth")]
        public static extern uint GetBitDepth(int channel, ref int depth);


        /// Return Type: unsigned int
        ///cam_status: DWORD*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetCameraEventStatus")]
        public static extern uint GetCameraEventStatus(ref uint cam_status);


        /// Return Type: unsigned int
        ///cameraIndex: int
        ///cameraHandle: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetCameraHandle")]
        public static extern uint GetCameraHandle(int cameraIndex, ref int cameraHandle);


        /// Return Type: unsigned int
        ///index: int
        ///information: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetCameraInformation")]
        public static extern uint GetCameraInformation(int index, ref int information);


        /// Return Type: unsigned int
        ///number: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetCameraSerialNumber")]
        public static extern uint GetCameraSerialNumber(ref int number);


        /// Return Type: unsigned int
        ///caps: AndorCapabilities*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetCapabilities")]
        public static extern uint GetCapabilities(ref ANDORCAPS caps);


        /// Return Type: unsigned int
        ///controllerCardModel: char*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetControllerCardModel")]
        public static extern uint GetControllerCardModel(string controllerCardModel);


        /// Return Type: unsigned int
        ///cameraHandle: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetCurrentCamera")]
        public static extern uint GetCurrentCamera(ref int cameraHandle);


        /// Return Type: unsigned int
        ///_iXshift: int*
        ///_iYshift: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetCYMGShift")]
        public static extern uint GetCYMGShift(ref int _iXshift, ref int _iYshift);


        /// Return Type: unsigned int
        ///frequency: double*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetDDGIOCFrequency")]
        public static extern uint GetDDGIOCFrequency(ref double frequency);


        /// Return Type: unsigned int
        ///number_pulses: unsigned int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetDDGIOCNumber")]
        public static extern uint GetDDGIOCNumber(ref uint number_pulses);


        /// Return Type: unsigned int
        ///pulses: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetDDGIOCPulses")]
        public static extern uint GetDDGIOCPulses(ref int pulses);


        /// Return Type: unsigned int
        ///_byte: unsigned char*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetDDGLiteGlobalControlByte")]
        public static extern uint GetDDGLiteGlobalControlByte(System.IntPtr _byte);


        /// Return Type: unsigned int
        ///_channel: AT_DDGLiteChannelId->Anonymous_d885e768_a24c_4233_9272_2ecf55783c88
        ///_byte: unsigned char*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetDDGLiteControlByte")]
        public static extern uint GetDDGLiteControlByte(AT_DDGLiteChannelId _channel, System.IntPtr _byte);


        /// Return Type: unsigned int
        ///_channel: AT_DDGLiteChannelId->Anonymous_d885e768_a24c_4233_9272_2ecf55783c88
        ///_f_delay: float*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetDDGLiteInitialDelay")]
        public static extern uint GetDDGLiteInitialDelay(AT_DDGLiteChannelId _channel, ref float _f_delay);


        /// Return Type: unsigned int
        ///_channel: AT_DDGLiteChannelId->Anonymous_d885e768_a24c_4233_9272_2ecf55783c88
        ///_f_width: float*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetDDGLitePulseWidth")]
        public static extern uint GetDDGLitePulseWidth(AT_DDGLiteChannelId _channel, ref float _f_width);


        /// Return Type: unsigned int
        ///_channel: AT_DDGLiteChannelId->Anonymous_d885e768_a24c_4233_9272_2ecf55783c88
        ///_f_delay: float*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetDDGLiteInterPulseDelay")]
        public static extern uint GetDDGLiteInterPulseDelay(AT_DDGLiteChannelId _channel, ref float _f_delay);


        /// Return Type: unsigned int
        ///_channel: AT_DDGLiteChannelId->Anonymous_d885e768_a24c_4233_9272_2ecf55783c88
        ///_ui32_pulses: unsigned int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetDDGLitePulsesPerExposure")]
        public static extern uint GetDDGLitePulsesPerExposure(AT_DDGLiteChannelId _channel, ref uint _ui32_pulses);


        /// Return Type: unsigned int
        ///width: double
        ///resolution: double
        ///Delay: double*
        ///Width: double*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetDDGPulse")]
        public static extern uint GetDDGPulse(double width, double resolution, ref double Delay, ref double Width);


        /// Return Type: unsigned int
        ///xpixels: int*
        ///ypixels: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetDetector")]
        public static extern uint GetDetector(ref int xpixels, ref int ypixels);


        /// Return Type: unsigned int
        ///info: void*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetDICameraInfo")]
        public static extern uint GetDICameraInfo(System.IntPtr info);


        /// Return Type: unsigned int
        ///gain: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetEMCCDGain")]
        public static extern uint GetEMCCDGain(ref int gain);


        /// Return Type: unsigned int
        ///low: int*
        ///high: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetEMGainRange")]
        public static extern uint GetEMGainRange(ref int low, ref int high);


        /// Return Type: unsigned int
        ///index: int*
        ///speed: float*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetFastestRecommendedVSSpeed")]
        public static extern uint GetFastestRecommendedVSSpeed(ref int index, ref float speed);


        /// Return Type: unsigned int
        ///FIFOusage: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetFIFOUsage")]
        public static extern uint GetFIFOUsage(ref int FIFOusage);


        /// Return Type: unsigned int
        ///mode: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetFilterMode")]
        public static extern uint GetFilterMode(ref int mode);


        /// Return Type: unsigned int
        ///time: float*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetFKExposureTime")]
        public static extern uint GetFKExposureTime(ref float time);


        /// Return Type: unsigned int
        ///index: int
        ///speed: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetFKVShiftSpeed")]
        public static extern uint GetFKVShiftSpeed(int index, ref int speed);


        /// Return Type: unsigned int
        ///index: int
        ///speed: float*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetFKVShiftSpeedF")]
        public static extern uint GetFKVShiftSpeedF(int index, ref float speed);


        /// Return Type: unsigned int
        ///PCB: unsigned int*
        ///Decode: unsigned int*
        ///dummy1: unsigned int*
        ///dummy2: unsigned int*
        ///CameraFirmwareVersion: unsigned int*
        ///CameraFirmwareBuild: unsigned int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetHardwareVersion")]
        public static extern uint GetHardwareVersion(ref uint PCB, ref uint Decode, ref uint dummy1, ref uint dummy2, ref uint CameraFirmwareVersion, ref uint CameraFirmwareBuild);


        /// Return Type: unsigned int
        ///name: char*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetHeadModel")]
        public static extern uint GetHeadModel(string name);


        /// Return Type: unsigned int
        ///index: int
        ///speed: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetHorizontalSpeed")]
        public static extern uint GetHorizontalSpeed(int index, ref int speed);


        /// Return Type: unsigned int
        ///channel: int
        ///type: int
        ///index: int
        ///speed: float*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetHSSpeed")]
        public static extern uint GetHSSpeed(int channel, int type, int index, ref float speed);


        /// Return Type: unsigned int
        ///bFlag: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetHVflag")]
        public static extern uint GetHVflag(ref int bFlag);


        /// Return Type: unsigned int
        ///devNum: int
        ///id: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetID")]
        public static extern uint GetID(int devNum, ref int id);


        /// Return Type: unsigned int
        ///iHFlip: int*
        ///iVFlip: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetImageFlip")]
        public static extern uint GetImageFlip(ref int iHFlip, ref int iVFlip);


        /// Return Type: unsigned int
        ///iRotate: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetImageRotate")]
        public static extern uint GetImageRotate(ref int iRotate);


        /// Return Type: unsigned int
        ///first: int
        ///last: int
        ///array: int*
        ///size: unsigned int
        ///validfirst: int*
        ///validlast: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetImages")]
        public static extern uint GetImages(int first, int last, ref int array, uint size, ref int validfirst, ref int validlast);


        /// Return Type: unsigned int
        ///first: int
        ///last: int
        ///array: WORD*
        ///size: unsigned int
        ///validfirst: int*
        ///validlast: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetImages16")]
        public static extern uint GetImages16(int first, int last, ref ushort array, uint size, ref int validfirst, ref int validlast);


        /// Return Type: unsigned int
        ///images: unsigned int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetImagesPerDMA")]
        public static extern uint GetImagesPerDMA(ref uint images);


        /// Return Type: unsigned int
        ///IRQ: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetIRQ")]
        public static extern uint GetIRQ(ref int IRQ);


        /// Return Type: unsigned int
        ///KeepCleanTime: float*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetKeepCleanTime")]
        public static extern uint GetKeepCleanTime(ref float KeepCleanTime);


        /// Return Type: unsigned int
        ///ReadMode: int
        ///HorzVert: int
        ///MaxBinning: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetMaximumBinning")]
        public static extern uint GetMaximumBinning(int ReadMode, int HorzVert, ref int MaxBinning);


        /// Return Type: unsigned int
        ///MaxExp: float*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetMaximumExposure")]
        public static extern uint GetMaximumExposure(ref float MaxExp);


        /// Return Type: unsigned int
        ///iNum: int
        ///iGain: int*
        ///fPhotoepc: float*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetMCPGain")]
        public static extern uint GetMCPGain(int iNum, ref int iGain, ref float fPhotoepc);


        /// Return Type: unsigned int
        ///_i_low: int*
        ///_i_high: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetMCPGainRange")]
        public static extern uint GetMCPGainRange(ref int _i_low, ref int _i_high);


        /// Return Type: unsigned int
        ///iVoltage: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetMCPVoltage")]
        public static extern uint GetMCPVoltage(ref int iVoltage);


        /// Return Type: unsigned int
        ///MinImageLength: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetMinimumImageLength")]
        public static extern uint GetMinimumImageLength(ref int MinImageLength);


        /// Return Type: unsigned int
        ///_number: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetMinimumNumberInSeries")]
        public static extern uint GetMinimumNumberInSeries(ref int _number);


        /// Return Type: unsigned int
        ///size: unsigned int
        ///algorithm: int
        ///red: WORD*
        ///green: WORD*
        ///blue: WORD*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetMostRecentColorImage16")]
        public static extern uint GetMostRecentColorImage16(uint size, int algorithm, ref ushort red, ref ushort green, ref ushort blue);


        /// Return Type: unsigned int
        ///array: int*
        ///size: unsigned int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetMostRecentImage")]
        public static extern uint GetMostRecentImage(ref int array, uint size);


        /// Return Type: unsigned int
        ///array: WORD*
        ///size: unsigned int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetMostRecentImage16")]
        public static extern uint GetMostRecentImage16(ref ushort array, uint size);


        /// Return Type: unsigned int
        ///TimeOfStart: SYSTEMTIME*
        ///_pfDifferences: float*
        ///_inoOfimages: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetMSTimingsData")]
        public static extern uint GetMSTimingsData(ref SYSTEMTIME TimeOfStart, ref float _pfDifferences, int _inoOfimages);


        /// Return Type: unsigned int
        ///TimeOfStart: SYSTEMTIME*
        ///_pfTimeFromStart: float*
        ///_i_index: unsigned int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetMetaDataInfo")]
        public static extern uint GetMetaDataInfo(ref SYSTEMTIME TimeOfStart, ref float _pfTimeFromStart, uint _i_index);


        /// Return Type: unsigned int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetMSTimingsEnabled")]
        public static extern uint GetMSTimingsEnabled();


        /// Return Type: unsigned int
        ///array: int*
        ///size: unsigned int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetNewData")]
        public static extern uint GetNewData(ref int array, uint size);


        /// Return Type: unsigned int
        ///array: WORD*
        ///size: unsigned int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetNewData16")]
        public static extern uint GetNewData16(ref ushort array, uint size);


        /// Return Type: unsigned int
        ///array: unsigned char*
        ///size: unsigned int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetNewData8")]
        public static extern uint GetNewData8(System.IntPtr array, uint size);


        /// Return Type: unsigned int
        ///array: float*
        ///size: unsigned int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetNewFloatData")]
        public static extern uint GetNewFloatData(ref float array, uint size);


        /// Return Type: unsigned int
        ///channels: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetNumberADChannels")]
        public static extern uint GetNumberADChannels(ref int channels);


        /// Return Type: unsigned int
        ///amp: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetNumberAmp")]
        public static extern uint GetNumberAmp(ref int amp);


        /// Return Type: unsigned int
        ///first: int*
        ///last: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetNumberAvailableImages")]
        public static extern uint GetNumberAvailableImages(ref int first, ref int last);


        /// Return Type: unsigned int
        ///numDevs: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetNumberDevices")]
        public static extern uint GetNumberDevices(ref int numDevs);


        /// Return Type: unsigned int
        ///number: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetNumberFKVShiftSpeeds")]
        public static extern uint GetNumberFKVShiftSpeeds(ref int number);


        /// Return Type: unsigned int
        ///number: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetNumberHorizontalSpeeds")]
        public static extern uint GetNumberHorizontalSpeeds(ref int number);


        /// Return Type: unsigned int
        ///channel: int
        ///type: int
        ///speeds: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetNumberHSSpeeds")]
        public static extern uint GetNumberHSSpeeds(int channel, int type, ref int speeds);


        /// Return Type: unsigned int
        ///first: int*
        ///last: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetNumberNewImages")]
        public static extern uint GetNumberNewImages(ref int first, ref int last);


        /// Return Type: unsigned int
        ///noGains: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetNumberPreAmpGains")]
        public static extern uint GetNumberPreAmpGains(ref int noGains);


        /// Return Type: unsigned int
        ///_ipnumTimes: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetNumberRingExposureTimes")]
        public static extern uint GetNumberRingExposureTimes(ref int _ipnumTimes);


        /// Return Type: unsigned int
        ///number: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetNumberVerticalSpeeds")]
        public static extern uint GetNumberVerticalSpeeds(ref int number);


        /// Return Type: unsigned int
        ///number: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetNumberVSAmplitudes")]
        public static extern uint GetNumberVSAmplitudes(ref int number);


        /// Return Type: unsigned int
        ///speeds: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetNumberVSSpeeds")]
        public static extern uint GetNumberVSSpeeds(ref int speeds);


        /// Return Type: unsigned int
        ///array: int*
        ///size: unsigned int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetOldestImage")]
        public static extern uint GetOldestImage(int[] array, uint size);


        /// Return Type: unsigned int
        ///array: WORD*
        ///size: unsigned int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetOldestImage16")]
        public static extern uint GetOldestImage16(ref ushort array, uint size);


        /// Return Type: unsigned int
        ///Address1: unsigned int*
        ///Address2: unsigned int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetPhysicalDMAAddress")]
        public static extern uint GetPhysicalDMAAddress(ref uint Address1, ref uint Address2);


        /// Return Type: unsigned int
        ///xSize: float*
        ///ySize: float*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetPixelSize")]
        public static extern uint GetPixelSize(ref float xSize, ref float ySize);


        /// Return Type: unsigned int
        ///index: int
        ///gain: float*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetPreAmpGain")]
        public static extern uint GetPreAmpGain(int index, ref float gain);


        /// Return Type: unsigned int
        ///ReadoutTime: float*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetReadOutTime")]
        public static extern uint GetReadOutTime(ref float ReadoutTime);


        /// Return Type: unsigned int
        ///mode: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetRegisterDump")]
        public static extern uint GetRegisterDump(ref int mode);


        /// Return Type: unsigned int
        ///_fpMin: float*
        ///_fpMax: float*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetRingExposureRange")]
        public static extern uint GetRingExposureRange(ref float _fpMin, ref float _fpMax);


        /// Return Type: unsigned int
        ///index: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetSizeOfCircularBuffer")]
        public static extern uint GetSizeOfCircularBuffer(ref int index);


        /// Return Type: unsigned int
        ///dwSlot: DWORD*
        ///dwBus: DWORD*
        ///dwDevice: DWORD*
        ///dwFunction: DWORD*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetSlotBusDeviceFunction")]
        public static extern uint GetSlotBusDeviceFunction(ref uint dwSlot, ref uint dwBus, ref uint dwDevice, ref uint dwFunction);


        /// Return Type: unsigned int
        ///eprom: unsigned int*
        ///coffile: unsigned int*
        ///vxdrev: unsigned int*
        ///vxdver: unsigned int*
        ///dllrev: unsigned int*
        ///dllver: unsigned int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetSoftwareVersion")]
        public static extern uint GetSoftwareVersion(ref uint eprom, ref uint coffile, ref uint vxdrev, ref uint vxdver, ref uint dllrev, ref uint dllver);


        /// Return Type: unsigned int
        ///index: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetSpoolProgress")]
        public static extern uint GetSpoolProgress(ref int index);


        /// Return Type: unsigned int
        ///status: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetStatus")]
        public static extern uint GetStatus(ref int status);


        /// Return Type: unsigned int
        ///temperature: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetTemperature")]
        public static extern uint GetTemperature(ref int temperature);


        /// Return Type: unsigned int
        ///temperature: float*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetTemperatureF")]
        public static extern uint GetTemperatureF(ref float temperature);


        /// Return Type: unsigned int
        ///mintemp: int*
        ///maxtemp: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetTemperatureRange")]
        public static extern uint GetTemperatureRange(ref int mintemp, ref int maxtemp);


        /// Return Type: unsigned int
        ///SensorTemp: float*
        ///TargetTemp: float*
        ///AmbientTemp: float*
        ///CoolerVolts: float*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetTemperatureStatus")]
        public static extern uint GetTemperatureStatus(ref float SensorTemp, ref float TargetTemp, ref float AmbientTemp, ref float CoolerVolts);


        /// Return Type: unsigned int
        ///index: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetTotalNumberImagesAcquired")]
        public static extern uint GetTotalNumberImagesAcquired(ref int index);


        /// Return Type: unsigned int
        ///_id: AT_VersionInfoId->Anonymous_7f837e49_4cd6_4731_b9f3_45dc39c281ec
        ///_sz_versionInfo: char*
        ///_ui32_bufferLen: unsigned int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetVersionInfo")]
        public static extern uint GetVersionInfo(AT_VersionInfoId _id, string _sz_versionInfo, uint _ui32_bufferLen);


        /// Return Type: unsigned int
        ///index: int
        ///speed: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetVerticalSpeed")]
        public static extern uint GetVerticalSpeed(int index, ref int speed);


        /// Return Type: unsigned int
        ///Address1: void**
        ///Address2: void**
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetVirtualDMAAddress")]
        public static extern uint GetVirtualDMAAddress(ref System.IntPtr Address1, ref System.IntPtr Address2);


        /// Return Type: unsigned int
        ///index: int
        ///speed: float*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GetVSSpeed")]
        public static extern uint GetVSSpeed(int index, ref float speed);


        /// Return Type: unsigned int
        ///id: int
        ///address: short
        ///text: char*
        ///size: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GPIBReceive")]
        public static extern uint GPIBReceive(int id, short address, string text, int size);


        /// Return Type: unsigned int
        ///id: int
        ///address: short
        ///text: char*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "GPIBSend")]
        public static extern uint GPIBSend(int id, short address, string text);


        /// Return Type: unsigned int
        ///i2cAddress: BYTE->unsigned char
        ///nBytes: int
        ///data: BYTE*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "I2CBurstRead")]
        public static extern uint I2CBurstRead(byte i2cAddress, int nBytes, ref byte data);


        /// Return Type: unsigned int
        ///i2cAddress: BYTE->unsigned char
        ///nBytes: int
        ///data: BYTE*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "I2CBurstWrite")]
        public static extern uint I2CBurstWrite(byte i2cAddress, int nBytes, ref byte data);


        /// Return Type: unsigned int
        ///deviceID: BYTE->unsigned char
        ///intAddress: BYTE->unsigned char
        ///pdata: BYTE*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "I2CRead")]
        public static extern uint I2CRead(byte deviceID, byte intAddress, ref byte pdata);


        /// Return Type: unsigned int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "I2CReset")]
        public static extern uint I2CReset();


        /// Return Type: unsigned int
        ///deviceID: BYTE->unsigned char
        ///intAddress: BYTE->unsigned char
        ///data: BYTE->unsigned char
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "I2CWrite")]
        public static extern uint I2CWrite(byte deviceID, byte intAddress, byte data);


        /// Return Type: unsigned int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "IdAndorDll")]
        public static extern uint IdAndorDll();


        /// Return Type: unsigned int
        ///port: int
        ///state: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "InAuxPort")]
        public static extern uint InAuxPort(int port, ref int state);


        /// Return Type: unsigned int
        ///dir: char*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "Initialize")]
        public static extern uint Initialize(string dir);


        /// Return Type: unsigned int
        ///dir: char*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "InitializeDevice")]
        public static extern uint InitializeDevice(string dir);


        /// Return Type: unsigned int
        ///_iCoolerStatus: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "IsCoolerOn")]
        public static extern uint IsCoolerOn(ref int _iCoolerStatus);


        /// Return Type: unsigned int
        ///InternalShutter: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "IsInternalMechanicalShutter")]
        public static extern uint IsInternalMechanicalShutter(ref int InternalShutter);


        /// Return Type: unsigned int
        ///channel: int
        ///amplifier: int
        ///index: int
        ///pa: int
        ///status: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "IsPreAmpGainAvailable")]
        public static extern uint IsPreAmpGainAvailable(int channel, int amplifier, int index, int pa, ref int status);


        /// Return Type: unsigned int
        ///_itriggerMode: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "IsTriggerModeAvailable")]
        public static extern uint IsTriggerModeAvailable(int _itriggerMode);


        /// Return Type: unsigned int
        ///array: int*
        ///nOrder: int
        ///nPoint: int
        ///nPixel: int
        ///coeff: float*
        ///fit: int
        ///hbin: int
        ///output: int*
        ///start: float*
        ///step: float*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "Merge")]
        public static extern uint Merge(ref int array, int nOrder, int nPoint, int nPixel, ref float coeff, int fit, int hbin, ref int output, ref float start, ref float step);


        /// Return Type: unsigned int
        ///port: int
        ///state: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "OutAuxPort")]
        public static extern uint OutAuxPort(int port, int state);


        /// Return Type: unsigned int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "PrepareAcquisition")]
        public static extern uint PrepareAcquisition();


        /// Return Type: unsigned int
        ///path: char*
        ///palette: char*
        ///ymin: int
        ///ymax: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SaveAsBmp")]
        public static extern uint SaveAsBmp(string path, string palette, int ymin, int ymax);


        /// Return Type: unsigned int
        ///path: char*
        ///comment: char*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SaveAsCommentedSif")]
        public static extern uint SaveAsCommentedSif(string path, string comment);


        /// Return Type: unsigned int
        ///_szPath: char*
        ///_iMode: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SaveAsEDF")]
        public static extern uint SaveAsEDF(string _szPath, int _iMode);


        /// Return Type: unsigned int
        ///szFileTitle: char*
        ///type: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SaveAsFITS")]
        public static extern uint SaveAsFITS(string szFileTitle, int type);


        /// Return Type: unsigned int
        ///szFileTitle: char*
        ///type: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SaveAsRaw")]
        public static extern uint SaveAsRaw(string szFileTitle, int type);


        /// Return Type: unsigned int
        ///path: char*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SaveAsSif")]
        public static extern uint SaveAsSif(string path);


        /// Return Type: unsigned int
        ///path: char*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SaveAsSPC")]
        public static extern uint SaveAsSPC(string path);


        /// Return Type: unsigned int
        ///path: char*
        ///palette: char*
        ///position: int
        ///type: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SaveAsTiff")]
        public static extern uint SaveAsTiff(string path, string palette, int position, int type);


        /// Return Type: unsigned int
        ///path: char*
        ///palette: char*
        ///position: int
        ///type: int
        ///_mode: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SaveAsTiffEx")]
        public static extern uint SaveAsTiffEx(string path, string palette, int position, int type, int _mode);


        /// Return Type: unsigned int
        ///cFileName: char*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SaveEEPROMToFile")]
        public static extern uint SaveEEPROMToFile(string cFileName);


        /// Return Type: unsigned int
        ///palette: char*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SaveToClipBoard")]
        public static extern uint SaveToClipBoard(string palette);


        /// Return Type: unsigned int
        ///devNum: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SelectDevice")]
        public static extern uint SelectDevice(int devNum);


        /// Return Type: unsigned int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SendSoftwareTrigger")]
        public static extern uint SendSoftwareTrigger();


        /// Return Type: unsigned int
        ///time: float
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetAccumulationCycleTime")]
        public static extern uint SetAccumulationCycleTime(float time);


        /// Return Type: unsigned int
        ///event: HANDLE->void*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetAcqStatusEvent")]
        public static extern uint SetAcqStatusEvent(System.IntPtr @event);


        /// Return Type: unsigned int
        ///mode: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetAcquisitionMode")]
        public static extern uint SetAcquisitionMode(int mode);


        /// Return Type: unsigned int
        ///type: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetAcquisitionType")]
        public static extern uint SetAcquisitionType(int type);


        /// Return Type: unsigned int
        ///channel: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetADChannel")]
        public static extern uint SetADChannel(int channel);


        /// Return Type: unsigned int
        ///_istate: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetAdvancedTriggerModeState")]
        public static extern uint SetAdvancedTriggerModeState(int _istate);


        /// Return Type: unsigned int
        ///array: int*
        ///size: unsigned int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetBackground")]
        public static extern uint SetBackground(ref int array, uint size);


        /// Return Type: unsigned int
        ///state: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetBaselineClamp")]
        public static extern uint SetBaselineClamp(int state);


        /// Return Type: unsigned int
        ///offset: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetBaselineOffset")]
        public static extern uint SetBaselineOffset(int offset);


        /// Return Type: unsigned int
        ///Enable: DWORD->unsigned int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetCameraStatusEnable")]
        public static extern uint SetCameraStatusEnable(uint Enable);


        /// Return Type: unsigned int
        ///numAreas: int
        ///areas: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetComplexImage")]
        public static extern uint SetComplexImage(int numAreas, ref int areas);


        /// Return Type: unsigned int
        ///mode: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetCoolerMode")]
        public static extern uint SetCoolerMode(int mode);


        /// Return Type: unsigned int
        ///active: int
        ///cropheight: int
        ///reserved: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetCropMode")]
        public static extern uint SetCropMode(int active, int cropheight, int reserved);


        /// Return Type: unsigned int
        ///cameraHandle: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetCurrentCamera")]
        public static extern uint SetCurrentCamera(int cameraHandle);


        /// Return Type: unsigned int
        ///bin: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetCustomTrackHBin")]
        public static extern uint SetCustomTrackHBin(int bin);


        /// Return Type: unsigned int
        ///type: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetDataType")]
        public static extern uint SetDataType(int type);


        /// Return Type: unsigned int
        ///_iOption: int
        ///_iResolution: int
        ///_iValue: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetDACOutput")]
        public static extern uint SetDACOutput(int _iOption, int _iResolution, int _iValue);


        /// Return Type: unsigned int
        ///_iScale: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetDACOutputScale")]
        public static extern uint SetDACOutputScale(int _iScale);


        /// Return Type: unsigned int
        ///t0: BYTE->unsigned char
        ///t1: BYTE->unsigned char
        ///t2: BYTE->unsigned char
        ///tt: BYTE->unsigned char
        ///address: BYTE->unsigned char
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetDDGAddress")]
        public static extern uint SetDDGAddress(byte t0, byte t1, byte t2, byte tt, byte address);


        /// Return Type: unsigned int
        ///gain: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetDDGGain")]
        public static extern uint SetDDGGain(int gain);


        /// Return Type: unsigned int
        ///step: double
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetDDGGateStep")]
        public static extern uint SetDDGGateStep(double step);


        /// Return Type: unsigned int
        ///state: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetDDGInsertionDelay")]
        public static extern uint SetDDGInsertionDelay(int state);


        /// Return Type: unsigned int
        ///state: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetDDGIntelligate")]
        public static extern uint SetDDGIntelligate(int state);


        /// Return Type: unsigned int
        ///state: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetDDGIOC")]
        public static extern uint SetDDGIOC(int state);


        /// Return Type: unsigned int
        ///frequency: double
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetDDGIOCFrequency")]
        public static extern uint SetDDGIOCFrequency(double frequency);


        /// Return Type: unsigned int
        ///number_pulses: unsigned int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetDDGIOCNumber")]
        public static extern uint SetDDGIOCNumber(uint number_pulses);


        /// Return Type: unsigned int
        ///_byte: unsigned char
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetDDGLiteGlobalControlByte")]
        public static extern uint SetDDGLiteGlobalControlByte(byte _byte);


        /// Return Type: unsigned int
        ///_channel: AT_DDGLiteChannelId->Anonymous_d885e768_a24c_4233_9272_2ecf55783c88
        ///_byte: unsigned char
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetDDGLiteControlByte")]
        public static extern uint SetDDGLiteControlByte(AT_DDGLiteChannelId _channel, byte _byte);


        /// Return Type: unsigned int
        ///_channel: AT_DDGLiteChannelId->Anonymous_d885e768_a24c_4233_9272_2ecf55783c88
        ///_f_delay: float
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetDDGLiteInitialDelay")]
        public static extern uint SetDDGLiteInitialDelay(AT_DDGLiteChannelId _channel, float _f_delay);


        /// Return Type: unsigned int
        ///_channel: AT_DDGLiteChannelId->Anonymous_d885e768_a24c_4233_9272_2ecf55783c88
        ///_f_width: float
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetDDGLitePulseWidth")]
        public static extern uint SetDDGLitePulseWidth(AT_DDGLiteChannelId _channel, float _f_width);


        /// Return Type: unsigned int
        ///_channel: AT_DDGLiteChannelId->Anonymous_d885e768_a24c_4233_9272_2ecf55783c88
        ///_f_delay: float
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetDDGLiteInterPulseDelay")]
        public static extern uint SetDDGLiteInterPulseDelay(AT_DDGLiteChannelId _channel, float _f_delay);


        /// Return Type: unsigned int
        ///_channel: AT_DDGLiteChannelId->Anonymous_d885e768_a24c_4233_9272_2ecf55783c88
        ///_ui32_pulses: unsigned int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetDDGLitePulsesPerExposure")]
        public static extern uint SetDDGLitePulsesPerExposure(AT_DDGLiteChannelId _channel, uint _ui32_pulses);


        /// Return Type: unsigned int
        ///t0: double
        ///t1: double
        ///t2: double
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetDDGTimes")]
        public static extern uint SetDDGTimes(double t0, double t1, double t2);


        /// Return Type: unsigned int
        ///mode: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetDDGTriggerMode")]
        public static extern uint SetDDGTriggerMode(int mode);


        /// Return Type: unsigned int
        ///mode: int
        ///p1: double
        ///p2: double
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetDDGVariableGateStep")]
        public static extern uint SetDDGVariableGateStep(int mode, double p1, double p2);


        /// Return Type: unsigned int
        ///board: int
        ///address: short
        ///type: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetDelayGenerator")]
        public static extern uint SetDelayGenerator(int board, short address, int type);


        /// Return Type: unsigned int
        ///MaxImagesPerDMA: int
        ///SecondsPerDMA: float
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetDMAParameters")]
        public static extern uint SetDMAParameters(int MaxImagesPerDMA, float SecondsPerDMA);


        /// Return Type: unsigned int
        ///event: HANDLE->void*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetDriverEvent")]
        public static extern uint SetDriverEvent(System.IntPtr @event);


        /// Return Type: unsigned int
        ///state: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetEMAdvanced")]
        public static extern uint SetEMAdvanced(int state);


        /// Return Type: unsigned int
        ///gain: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetEMCCDGain")]
        public static extern uint SetEMCCDGain(int gain);


        /// Return Type: unsigned int
        ///EMClockCompensationFlag: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetEMClockCompensation")]
        public static extern uint SetEMClockCompensation(int EMClockCompensationFlag);


        /// Return Type: unsigned int
        ///mode: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetEMGainMode")]
        public static extern uint SetEMGainMode(int mode);


        /// Return Type: unsigned int
        ///time: float
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetExposureTime")]
        public static extern uint SetExposureTime(float time);


        /// Return Type: unsigned int
        ///mode: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetFanMode")]
        public static extern uint SetFanMode(int mode);


        /// Return Type: unsigned int
        ///mode: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetFastExtTrigger")]
        public static extern uint SetFastExtTrigger(int mode);


        /// Return Type: unsigned int
        ///exposedRows: int
        ///seriesLength: int
        ///time: float
        ///mode: int
        ///hbin: int
        ///vbin: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetFastKinetics")]
        public static extern uint SetFastKinetics(int exposedRows, int seriesLength, float time, int mode, int hbin, int vbin);


        /// Return Type: unsigned int
        ///exposedRows: int
        ///seriesLength: int
        ///time: float
        ///mode: int
        ///hbin: int
        ///vbin: int
        ///offset: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetFastKineticsEx")]
        public static extern uint SetFastKineticsEx(int exposedRows, int seriesLength, float time, int mode, int hbin, int vbin, int offset);


        /// Return Type: unsigned int
        ///mode: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetFilterMode")]
        public static extern uint SetFilterMode(int mode);


        /// Return Type: unsigned int
        ///width: int
        ///sensitivity: float
        ///range: int
        ///accept: float
        ///smooth: int
        ///noise: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetFilterParameters")]
        public static extern uint SetFilterParameters(int width, float sensitivity, int range, float accept, int smooth, int noise);


        /// Return Type: unsigned int
        ///index: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetFKVShiftSpeed")]
        public static extern uint SetFKVShiftSpeed(int index);


        /// Return Type: unsigned int
        ///state: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetFPDP")]
        public static extern uint SetFPDP(int state);


        /// Return Type: unsigned int
        ///mode: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetFrameTransferMode")]
        public static extern uint SetFrameTransferMode(int mode);


        /// Return Type: unsigned int
        ///hbin: int
        ///vbin: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetFullImage")]
        public static extern uint SetFullImage(int hbin, int vbin);


        /// Return Type: unsigned int
        ///bin: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetFVBHBin")]
        public static extern uint SetFVBHBin(int bin);


        /// Return Type: unsigned int
        ///gain: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetGain")]
        public static extern uint SetGain(int gain);


        /// Return Type: unsigned int
        ///delay: float
        ///width: float
        ///step: float
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetGate")]
        public static extern uint SetGate(float delay, float width, float step);


        /// Return Type: unsigned int
        ///gatemode: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetGateMode")]
        public static extern uint SetGateMode(int gatemode);


        /// Return Type: unsigned int
        ///state: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetHighCapacity")]
        public static extern uint SetHighCapacity(int state);


        /// Return Type: unsigned int
        ///index: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetHorizontalSpeed")]
        public static extern uint SetHorizontalSpeed(int index);


        /// Return Type: unsigned int
        ///type: int
        ///index: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetHSSpeed")]
        public static extern uint SetHSSpeed(int type, int index);


        /// Return Type: unsigned int
        ///hbin: int
        ///vbin: int
        ///hstart: int
        ///hend: int
        ///vstart: int
        ///vend: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetImage")]
        public static extern uint SetImage(int hbin, int vbin, int hstart, int hend, int vstart, int vend);


        /// Return Type: unsigned int
        ///iHFlip: int
        ///iVFlip: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetImageFlip")]
        public static extern uint SetImageFlip(int iHFlip, int iVFlip);


        /// Return Type: unsigned int
        ///iRotate: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetImageRotate")]
        public static extern uint SetImageRotate(int iRotate);


        /// Return Type: unsigned int
        ///active: int
        ///cropheight: int
        ///cropwidth: int
        ///vbin: int
        ///hbin: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetIsolatedCropMode")]
        public static extern uint SetIsolatedCropMode(int active, int cropheight, int cropwidth, int vbin, int hbin);


        /// Return Type: unsigned int
        ///time: float
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetKineticCycleTime")]
        public static extern uint SetKineticCycleTime(float time);


        /// Return Type: unsigned int
        ///gain: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetMCPGain")]
        public static extern uint SetMCPGain(int gain);


        /// Return Type: unsigned int
        ///gating: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetMCPGating")]
        public static extern uint SetMCPGating(int gating);


        /// Return Type: unsigned int
        ///wnd: HWND->HWND__*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetMessageWindow")]
        public static extern uint SetMessageWindow(System.IntPtr wnd);


        /// Return Type: unsigned int
        ///number: int
        ///height: int
        ///offset: int
        ///bottom: int*
        ///gap: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetMultiTrack")]
        public static extern uint SetMultiTrack(int number, int height, int offset, ref int bottom, ref int gap);


        /// Return Type: unsigned int
        ///bin: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetMultiTrackHBin")]
        public static extern uint SetMultiTrackHBin(int bin);


        /// Return Type: unsigned int
        ///_iStart: int
        ///_iEnd: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetMultiTrackHRange")]
        public static extern uint SetMultiTrackHRange(int _iStart, int _iEnd);


        /// Return Type: unsigned int
        ///data: int*
        ///lowAdd: int
        ///highAdd: int
        ///len: int
        ///physical: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetNextAddress")]
        public static extern uint SetNextAddress(ref int data, int lowAdd, int highAdd, int len, int physical);


        /// Return Type: unsigned int
        ///data: int*
        ///lowAdd: int
        ///highAdd: int
        ///len: int
        ///physical: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetNextAddress16")]
        public static extern uint SetNextAddress16(ref int data, int lowAdd, int highAdd, int len, int physical);


        /// Return Type: unsigned int
        ///number: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetNumberAccumulations")]
        public static extern uint SetNumberAccumulations(int number);


        /// Return Type: unsigned int
        ///number: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetNumberKinetics")]
        public static extern uint SetNumberKinetics(int number);


        /// Return Type: unsigned int
        ///_i_number: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetNumberPrescans")]
        public static extern uint SetNumberPrescans(int _i_number);


        /// Return Type: unsigned int
        ///type: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetOutputAmplifier")]
        public static extern uint SetOutputAmplifier(int type);


        /// Return Type: unsigned int
        ///mode: int
        ///value: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetPCIMode")]
        public static extern uint SetPCIMode(int mode, int value);


        /// Return Type: unsigned int
        ///state: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetPhotonCounting")]
        public static extern uint SetPhotonCounting(int state);


        /// Return Type: unsigned int
        ///param0: int
        ///param1: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetPhotonCountingThreshold")]
        public static extern uint SetPhotonCountingThreshold(int param0, int param1);


        /// Return Type: unsigned int
        ///bitdepth: int
        ///colormode: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetPixelMode")]
        public static extern uint SetPixelMode(int bitdepth, int colormode);


        /// Return Type: unsigned int
        ///index: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetPreAmpGain")]
        public static extern uint SetPreAmpGain(int index);


        /// Return Type: unsigned int
        ///numTracks: int
        ///areas: int*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetRandomTracks")]
        public static extern uint SetRandomTracks(int numTracks, ref int areas);


        /// Return Type: unsigned int
        ///mode: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetReadMode")]
        public static extern uint SetReadMode(int mode);


        /// Return Type: unsigned int
        ///mode: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetRegisterDump")]
        public static extern uint SetRegisterDump(int mode);


        /// Return Type: unsigned int
        ///numTimes: int
        ///times: float*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetRingExposureTimes")]
        public static extern uint SetRingExposureTimes(int numTimes, ref float times);


        /// Return Type: unsigned int
        ///event: HANDLE->void*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetSaturationEvent")]
        public static extern uint SetSaturationEvent(System.IntPtr @event);


        /// Return Type: unsigned int
        ///type: int
        ///mode: int
        ///closingtime: int
        ///openingtime: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetShutter")]
        public static extern uint SetShutter(int type, int mode, int closingtime, int openingtime);


        /// Return Type: unsigned int
        ///type: int
        ///mode: int
        ///closingtime: int
        ///openingtime: int
        ///ext_mode: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetShutterEx")]
        public static extern uint SetShutterEx(int type, int mode, int closingtime, int openingtime, int ext_mode);


        /// Return Type: unsigned int
        ///type: int
        ///mode: int
        ///closingtime: int
        ///openingtime: int
        ///ext_type: int
        ///ext_mode: int
        ///dummy1: int
        ///dummy2: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetShutters")]
        public static extern uint SetShutters(int type, int mode, int closingtime, int openingtime, int ext_type, int ext_mode, int dummy1, int dummy2);


        /// Return Type: unsigned int
        ///comment: char*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetSifComment")]
        public static extern uint SetSifComment(string comment);


        /// Return Type: unsigned int
        ///centre: int
        ///height: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetSingleTrack")]
        public static extern uint SetSingleTrack(int centre, int height);


        /// Return Type: unsigned int
        ///bin: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetSingleTrackHBin")]
        public static extern uint SetSingleTrackHBin(int bin);


        /// Return Type: unsigned int
        ///active: int
        ///method: int
        ///path: char*
        ///framebuffersize: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetSpool")]
        public static extern uint SetSpool(int active, int method, string path, int framebuffersize);


        /// Return Type: unsigned int
        ///mode: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetStorageMode")]
        public static extern uint SetStorageMode(int mode);


        /// Return Type: unsigned int
        ///temperature: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetTemperature")]
        public static extern uint SetTemperature(int temperature);


        /// Return Type: unsigned int
        ///event: HANDLE->void*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetTemperatureEvent")]
        public static extern uint SetTemperatureEvent(System.IntPtr @event);


        /// Return Type: unsigned int
        ///mode: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetTriggerMode")]
        public static extern uint SetTriggerMode(int mode);


        /// Return Type: unsigned int
        ///event: HANDLE->void*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetUserEvent")]
        public static extern uint SetUserEvent(System.IntPtr @event);


        /// Return Type: unsigned int
        ///width: int
        ///height: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetUSGenomics")]
        public static extern uint SetUSGenomics(int width, int height);


        /// Return Type: unsigned int
        ///rows: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetVerticalRowBuffer")]
        public static extern uint SetVerticalRowBuffer(int rows);


        /// Return Type: unsigned int
        ///index: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetVerticalSpeed")]
        public static extern uint SetVerticalSpeed(int index);


        /// Return Type: unsigned int
        ///state: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetVirtualChip")]
        public static extern uint SetVirtualChip(int state);


        /// Return Type: unsigned int
        ///index: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetVSAmplitude")]
        public static extern uint SetVSAmplitude(int index);


        /// Return Type: unsigned int
        ///index: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "SetVSSpeed")]
        public static extern uint SetVSSpeed(int index);


        /// Return Type: unsigned int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "ShutDown")]
        public static extern uint ShutDown();


        /// Return Type: unsigned int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "StartAcquisition")]
        public static extern uint StartAcquisition();


        /// Return Type: unsigned int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "UnMapPhysicalAddress")]
        public static extern uint UnMapPhysicalAddress();


        /// Return Type: unsigned int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "WaitForAcquisition")]
        public static extern uint WaitForAcquisition();


        /// Return Type: unsigned int
        ///cameraHandle: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "WaitForAcquisitionByHandle")]
        public static extern uint WaitForAcquisitionByHandle(int cameraHandle);


        /// Return Type: unsigned int
        ///cameraHandle: int
        ///_iTimeOutMs: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "WaitForAcquisitionByHandleTimeOut")]
        public static extern uint WaitForAcquisitionByHandleTimeOut(int cameraHandle, int _iTimeOutMs);


        /// Return Type: unsigned int
        ///_iTimeOutMs: int
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "WaitForAcquisitionTimeOut")]
        public static extern uint WaitForAcquisitionTimeOut(int _iTimeOutMs);


        /// Return Type: unsigned int
        ///_wRed: WORD*
        ///_wGreen: WORD*
        ///_wBlue: WORD*
        ///_fRelR: float*
        ///_fRelB: float*
        ///_info: WhiteBalanceInfo*
        [System.Runtime.InteropServices.DllImportAttribute("atmcd32d.dll", EntryPoint = "WhiteBalance")]
        public static extern uint WhiteBalance(ref ushort _wRed, ref ushort _wGreen, ref ushort _wBlue, ref float _fRelR, ref float _fRelB, ref WHITEBALANCEINFO _info);

    }
}
